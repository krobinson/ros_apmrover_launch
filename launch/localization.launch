<!--
    This launch file provides an example of how to work with GPS data using robot_localization. It runs three nodes:
    (1) An EKF instance that fuses odometry and IMU data and outputs an odom-frame state estimate
    (2) A second EKF instance that fuses the same data, but also fuses the transformed GPS data from (3)
    (3) An instance of navsat_transform_node, which takes in GPS data and produces pose data that has been
    transformed into your robot's world frame (here, map). The node produces a map-frame state estimate.

The first EKF instance produces the odom->base_link transform. The second EKF produces the map->odom transform,
but requires the odom->base_link transform from the first instance in order to do so. See the
params/dual_ekf_navsat_example.yaml file for parameter specification.
-->

<launch>

  <rosparam command="load" file="$(find robot_localization)/params/dual_ekf_navsat_example.yaml" />

  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_se_odom" clear_params="true">
    name="ekf_localization" clear_params="true">

    <param name="frequency" value="10"/>
    <param name="sensor_timeout" value="2.0"/>
    <param name="two_d_mode" value="true"/>
    <param name="map_frame" value="map"/>
    <param name="odom_frame" value="odom"/>
    <param name="base_link_frame" value="base_link"/>
    <param name="world_frame" value="odom"/>
    <param name="publish_tf" value="true"/>
    <param name="imu0" value="imu/data"/>
    <rosparam param="imu0_config">[false, false, false,
    true,  true,  true,
    false,  false,  false,
    true,  true,  true,
    true,  true,  true]</rosparam>
    <param name="imu0_differential" value="false"/>
    <param name="imu0_remove_gravitational_acceleration" value="true"/>

    <param name="odom0" value="/odometry/gps"/>
    <rosparam param="odom0_config">[true,  true,  true,
    false, false, false,
    false, false, false,
    false, false, false,
    false, false, false]</rosparam>
    <param name="odom0_differential" value="false"/>
  </node>

  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_se_map" clear_params="true">
    <remap from="odometry/filtered" to="odometry/filtered_map"/>
  </node>
  <node pkg="robot_localization" type="navsat_transform_node" name="navsat_transform" clear_params="true"
	respawn="true" output="screen">
    <param name="magnetic_declination_radians" value="0"/>
    <param name="broadcast_utm_transform" value="true"/>
    <param name="wait_for_datum" value="true"/>
    <rosparam param="datum">[36.6, -121.9, 0.0]</rosparam>

    <!-- Inputs -->
    <remap from="imu/data" to="imu/data" />
    <remap from="gps/f`ix" to="gps/fix" />
  </node>
    
    <remap from="odometry/filtered" to="odometry/filtered_map"/>




</launch>
